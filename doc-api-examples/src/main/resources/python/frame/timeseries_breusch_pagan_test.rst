Examples
--------

<hide>
>>> import trustedanalytics as ta
>>> ta.connect()
-etc-
>>> data = [[8.34,40.77,1010.84,90.01,480.48],
...         [23.64,58.49,1011.4,74.2,445.75],
...         [29.74,56.9,1007.15,41.91,438.76],
...         [19.07,49.69,1007.22,76.79,453.09],
...         [11.8,40.66,1017.13,97.2,464.43],
...         [13.97,39.16,1016.05,84.6,470.96],
...         [22.1,71.29,1008.2,75.38,442.35],
...         [14.47,41.76,1021.98,78.41,464],
...         [31.25,69.51,1010.25,36.83,428.77],
...         [6.77,38.18,1017.8,81.13,484.3],
...         [28.28,68.67,1006.36,69.9,435.29],
...         [22.99,46.93,1014.15,49.42,451.41],
...         [29.3,70.04,1010.95,61.23,426.25],
...         [8.14,37.49,1009.04,80.33,480.66],
...         [16.92,44.6,1017.34,58.75,460.17],
...         [22.72,64.15,1021.14,60.34,453.13],
...         [18.14,43.56,1012.83,47.1,461.71],
...         [11.49,44.63,1020.44,86.04,471.08],
...         [9.94,40.46,1018.9,68.51,473.74],
...         [23.54,41.1,1002.05,38.05,448.56],
...         [14.9,52.05,1015.11,77.33,464.82],
...         [33.8,64.96,1004.88,49.37,427.28],
...         [25.37,68.31,1011.12,70.99,441.76],
...         [7.29,41.04,1024.06,89.19,474.71]]

>>> schema = [("AT", ta.float32),("V", ta.float32),("AP", ta.float32),("RH", ta.float32),("PE", ta.float32)]

>>> frame = ta.Frame(ta.UploadRows(data, schema))
-etc-
</hide>

Consider the following frame:

>>> frame.inspect()
[#]  AT             V              AP             RH             PE
==============================================================================
[0]  8.34000015259  40.7700004578  1010.84002686  90.0100021362  480.480010986
[1]  23.6399993896  58.4900016785  1011.40002441  74.1999969482         445.75
[2]  29.7399997711  56.9000015259  1007.15002441  41.9099998474  438.760009766
[3]  19.0699996948  49.6899986267   1007.2199707  76.7900009155  453.089996338
[4]  11.8000001907  40.6599998474  1017.13000488  97.1999969482  464.429992676
[5]   13.970000267  39.1599998474  1016.04998779  84.5999984741  470.959991455
[6]  22.1000003815  71.2900009155  1008.20001221  75.3799972534  442.350006104
[7]   14.470000267  41.7599983215  1021.97998047  78.4100036621          464.0
[8]          31.25  69.5100021362        1010.25  36.8300018311  428.769989014
[9]  6.76999998093  38.1800003052  1017.79998779  81.1299972534  484.299987793

Calculate the Bruesh-Pagan test statistic where the "AT" column contains residual values and the other columns are
factors:

>>> result = frame.timeseries_breusch_pagan_test("AT",["V","AP","RH","PE"])
<progress>

The result contains the test statistic and p-value:

>>> result["test_stat"]
22.674159327676357

>>> result["p_value"]
0.00014708935047758054
